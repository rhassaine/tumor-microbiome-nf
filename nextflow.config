manifest {
    description = 'Nextflow pipeline for creating the NKI-Atlas of microbes'
    mainScript = 'main.nf'
    version = '0.6.1'
    author = "Thomas W. Battaglia"
}

// Set default parameters
params {
  help = false
  csv = ''
  outdir = 'results'
  min_length = 50
  min_quality = 20
  krakenDB = 'kraken2/standard_db_human'
  kraken_len = 150
  confidence = 0
  min_counts = 10
  skip_kraken2 = false
  pathseqDB = "pathseq"
  phred_cutoff = 15
  blood = false
  microbe_cutoff = 30
  normalize_abundance = false
  identity_margin = 0.02
  min_score_identity = 0.9
  host_aligned = false
  min_clip_length = 60
  skip_pre_bwa = false
  print = false
  skip_kraken2 = false
  skip_pathseq = false
  tracedir = "${params.outdir}/pipeline_info"
}

// Reduce polling interval
executor {
    name = 'google-lifesciences'
    queueSize = 50
    pollInterval = '100ms'
    exitReadTimeout = '300 ms'
}

// Docker parameters
docker {
    enabled = true
    runOptions = '-u $(id -u):$(id -g)'
}

// Process parameters
process {
  errorStrategy = { task.exitStatus in [14] ? 'retry' : 'ignore' }
  maxRetries = 5
  withName: preprocess {
        executor = 'google-lifesciences'
        container = 'atlas-filter'
        machineType = 'n1-highcpu-8'
        maxForks = 15
    }
  withName: kraken2 {
        executor = 'google-lifesciences'
        container = 'kraken_208'
        machineType = 'n1-highmem-8'
        maxForks = 10
    }
  withName: pathseq {
        executor = 'google-lifesciences'
        container = 'gatk4'
        machineType = 'n1-highmem-16'
        maxForks = 20
    }
}

// Specify Google Lifescience processes
google {
    project = 'projectID'
    region = 'europe-west4'
    location = 'europe-west4'
    enableRequesterPaysBuckets = true
    lifeSciences.debug = true
    lifeSciences.preemptible = true
    lifeSciences.sshDaemon = false
    lifeSciences.usePrivateAddress = true
    lifeSciences.bootDiskSize = 15.GB
    lifeSciences.copyImage = 'google/cloud-sdk:slim'
}

// Capture Nextflow reports into separate directory
timeline {
  enabled = true
  file = "${params.tracedir}/timeline.html"
}
report {
  enabled = true
  file = "${params.tracedir}/report.html"
}
trace {
  enabled = true
  file = "${params.tracedir}/trace.txt"
}
